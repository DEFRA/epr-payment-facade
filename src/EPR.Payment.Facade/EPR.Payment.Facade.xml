<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EPR.Payment.Facade</name>
    </assembly>
    <members>
        <member name="T:EPR.Payment.Facade.Controllers.FeesController">
            <summary>
            Controller for managing fees.
            </summary>
        </member>
        <member name="M:EPR.Payment.Facade.Controllers.FeesController.#ctor(EPR.Payment.Facade.Services.Interfaces.IFeesService,Microsoft.Extensions.Logging.ILogger{EPR.Payment.Facade.Controllers.FeesController})">
            <summary>
            Initializes a new instance of the <see cref="T:EPR.Payment.Facade.Controllers.FeesController"/> class.
            </summary>
            <param name="feesService">The fees service.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:EPR.Payment.Facade.Controllers.FeesController.GetFee(System.Boolean,System.String)">
            <summary>
            Retrieves fee information based on the provided parameters.
            </summary>
            <param name="isLarge">Specifies if the fee is for a large transaction.</param>
            <param name="regulator">The regulator for which the fee is being retrieved.</param>
            <returns>
            An ActionResult of type GetFeesResponseDto representing the fee information,
            or a 404 Not Found if no fee information is found for the specified parameters.
            </returns>
            <response code="200">Returns the requested fee.</response>
            <response code="404">If no fee information is found for the specified parameters.</response>
            <response code="400">If the parameters are invalid.</response>
            <response code="500">If an unexpected error occurs.</response>
        </member>
        <member name="T:EPR.Payment.Facade.Controllers.PaymentsController">
            <summary>
            Controller for managing payments.
            </summary>
        </member>
        <member name="M:EPR.Payment.Facade.Controllers.PaymentsController.#ctor(EPR.Payment.Facade.Services.Interfaces.IPaymentsService,Microsoft.Extensions.Logging.ILogger{EPR.Payment.Facade.Controllers.PaymentsController})">
            <summary>
            Initializes a new instance of the <see cref="!:PaymentssController"/> class.
            </summary>
            <param name="paymentsService">The fees service.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:EPR.Payment.Facade.Controllers.PaymentsController.InitiatePayment(EPR.Payment.Facade.Common.Dtos.Request.PaymentRequestDto)">
            <summary>
            Initiates a new payment.
            </summary>
            <param name="request">The payment request data.</param>
            <returns>The created payment response.</returns>
            <response code="201">Returns the created payment response.</response>
            <response code="400">If the request is invalid.</response>
            <response code="500">If an unexpected error occurs.</response>
        </member>
        <member name="M:EPR.Payment.Facade.Controllers.PaymentsController.GetPaymentStatus(System.String)">
            <summary>
            Retrieves the status of a payment.
            </summary>
            <param name="paymentId">The ID of the payment.</param>
            <returns>The payment status response.</returns>
            <response code="200">Returns the payment status response.</response>
            <response code="400">If the request is invalid.</response>
            <response code="404">If the payment is not found.</response>
            <response code="500">If an unexpected error occurs.</response>
        </member>
        <member name="M:EPR.Payment.Facade.Controllers.PaymentsController.InsertPaymentStatus(System.String,EPR.Payment.Facade.Common.Dtos.Request.PaymentStatusInsertRequestDto)">
            <summary>
            Inserts the status of a payment.
            </summary>
            <param name="paymentId">The ID of the payment.</param>
            <param name="request">The payment status insertion request data.</param>
            <returns>An action result indicating the success of the operation.</returns>
            <response code="200">If the status is successfully inserted.</response>
            <response code="400">If the request is invalid.</response>
            <response code="500">If an unexpected error occurs.</response>
        </member>
    </members>
</doc>
